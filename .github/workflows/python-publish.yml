name: Upload Python Package

on:
  release:
    types: [published]
  workflow_dispatch: # 允许手动触发

# 权限设置：为 PyPI 的 Trusted Publishing 准备
permissions:
  id-token: write # 用于 OIDC 认证
  contents: read # 允许读取仓库内容

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }} (${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        arch: [ auto ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        if: matrix.os == 'ubuntu-latest'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Build wheels
        uses: pypa/cibuildwheel@v2 # 使用主版本引用
        env:
          # --- 其他 cibuildwheel 配置 ---
          CIBW_ARCHS_MACOS: x86_64 arm64
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_MANYLINUX_AARCH64_IMAGE: manylinux2014
          CIBW_REPAIR_WHEEL_COMMAND_MACOS: pip install delvewheel && delvewheel repair -w {dest_dir} {wheel}

      - name: Upload wheels artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.arch }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest # 在 Linux 上构建 sdist 通常足够
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # 使用一个版本来构建 sdist

      - name: Install build dependencies
        run: python -m pip install build setuptools wheel pybind11 # 确保 build 依赖可用

      - name: Build sdist
        run: python -m build --sdist --outdir dist .

      - name: Upload sdist artifact
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  pypi-publish:
    name: Publish distributions to PyPI
    # 需要 wheels 和 sdist 都构建成功
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest

    # 使用 PyPI 的 Trusted Publishing 环境
    environment:
      name: pypi
      url: https://pypi.org/project/cppjieba-py-dat

    permissions:
      id-token: write # 必需权限

    steps:
      # 步骤 1: 下载所有 Wheels Artifacts
      - name: Download wheel artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          path: dist
          merge-multiple: true

      # 步骤 2: 下载 sdist Artifact
      - name: Download sdist artifact
        uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist

      # 查看最终要上传的文件列表
      - name: List distributions
        run: ls -l dist

      # 使用 pypa action 发布到 PyPI
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
